<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.lj.pdl.mapper.AlgoDeployMapper">
    <resultMap id="AlgoDeployResultMap" type="AlgoDeployDO">
        <id     column="id"                  property="id"                jdbcType="BIGINT"    javaType="Long" />
        <result column="create_time"         property="createTime"        jdbcType="TIMESTAMP" javaType="java.util.Date" />
        <result column="modify_time"         property="modifyTime"        jdbcType="TIMESTAMP" javaType="java.util.Date" />
        <result column="creator_name"        property="creatorName"       jdbcType="VARCHAR"   javaType="String" />
        <result column="name"                property="name"              jdbcType="VARCHAR"   javaType="String" />
        <result column="framework"           property="framework"         jdbcType="VARCHAR"   javaType="cn.lj.pdl.constant.Framework" />
        <result column="code_zip_file_path"   property="codeZipFilePath"   jdbcType="VARCHAR"   javaType="String" />
        <result column="main_class_path"     property="mainClassPath"     jdbcType="VARCHAR"   javaType="String" />
        <result column="uuid"                property="uuid"              jdbcType="VARCHAR"   javaType="String" />
        <result column="status"              property="status"            jdbcType="VARCHAR"   javaType="cn.lj.pdl.constant.DeployStatus" />
        <result column="service_url"         property="serviceUrl"        jdbcType="VARCHAR"   javaType="String" />
        <result column="replicas"            property="replicas"          jdbcType="INTEGER"   javaType="Integer" />
        <result column="available_replicas"  property="availableReplicas" jdbcType="INTEGER"   javaType="Integer" />
    </resultMap>

    <sql id="AlgoDeploy_All_Columns_Without_Id" >
        create_time, modify_time, creator_name,
        name, framework, code_zip_file_path, main_class_path, uuid, status, service_url, replicas, available_replicas
    </sql>

    <sql id="AlgoDeploy_All_Columns" >
        id, <include refid="AlgoDeploy_All_Columns_Without_Id" />
    </sql>

    <sql id="AlgoDeploy_Dynamic_Query">
        TRUE
        <if test="condition.id != null">
            AND id = #{condition.id}
        </if>
        <if test="condition.creatorName != null">
            AND creator_name LIKE concat ('%', #{condition.creatorName}, '%')
        </if>
        <if test="condition.name != null">
            AND name LIKE concat('%', #{condition.name}, '%')
        </if>
        <if test="condition.framework != null">
            AND algo_type = #{condition.framework}
        </if>
        <if test="condition.status != null">
            AND classes_number = #{condition.status}
        </if>
    </sql>

    <insert id="insert" parameterType="AlgoDeployDO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO algo_deploy
            (<include refid="AlgoDeploy_All_Columns_Without_Id" />)
        VALUES
            (now(), now(), #{creatorName},
            #{name}, #{framework}, #{codeZipFilePath}, #{mainClassPath}, #{uuid}, #{status}, #{serviceUrl}, #{replicas}, #{availableReplicas})
    </insert>

    <select id="findById" parameterType="Long" resultMap="AlgoDeployResultMap">
        SELECT
            <include refid="AlgoDeploy_All_Columns" />
        FROM algo_deploy
        WHERE id = #{id}
    </select>

    <select id="countByCondition" resultType="Integer">
        SELECT COUNT(1)
        FROM algo_deploy
        WHERE
            <include refid="AlgoDeploy_Dynamic_Query" />
    </select>

    <select id="findByCondition" resultMap="AlgoDeployResultMap">
        SELECT
            <include refid="AlgoDeploy_All_Columns" />
        FROM algo_deploy
        WHERE
            <include refid="AlgoDeploy_Dynamic_Query" />
        ORDER BY modify_time DESC
        LIMIT #{pageInfo.startIndex}, #{pageInfo.pageSize}
    </select>

    <select id="findByStatus" resultMap="AlgoDeployResultMap">
        SELECT
            <include refid="AlgoDeploy_All_Columns" />
        FROM algo_deploy
        WHERE status = #{status}
    </select>

    <update id="updateStatus">
        UPDATE algo_deploy
        SET status = #{status}, modify_time = now()
        WHERE id = #{id}
    </update>

    <update id="updateReplicas">
        UPDATE algo_deploy
        SET replicas = #{replicas}, modify_time = now()
        WHERE id = #{id}
    </update>

    <update id="updateAvailableReplicas">
        UPDATE algo_deploy
        SET available_replicas = #{availableReplicas}, modify_time = now()
        WHERE id = #{id}
    </update>

    <update id="updateServiceUrl">
        UPDATE algo_deploy
        SET service_url = #{serviceUrl}, modify_time = now()
        WHERE id = #{id}
    </update>

    <update id="updateCodeZipFilePath">
        UPDATE algo_deploy
        SET code_zip_file_path = #{codeZipFilePath}, modify_time = now()
        WHERE id = #{id}
    </update>

    <update id="updateMainClassPath">
        UPDATE algo_deploy
        SET main_class_path = #{mainClassPath}, modify_time = now()
        WHERE id = #{id}
    </update>

</mapper>